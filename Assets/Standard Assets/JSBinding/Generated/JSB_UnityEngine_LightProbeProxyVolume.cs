
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by CSGenerator.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;

using jsval = JSApi.jsval;

public class JSB_UnityEngine_LightProbeProxyVolume
{

////////////////////// LightProbeProxyVolume ///////////////////////////////////////
// constructors

static bool LightProbeProxyVolume_LightProbeProxyVolume1(JSVCall vc, int argc)
{
    int _this = JSApi.getObject((int)JSApi.GetType.Arg);
    JSApi.attachFinalizerObject(_this);
    --argc;

    int len = argc;
    if (len == 0)
    {
        JSMgr.addJSCSRel(_this, new UnityEngine.LightProbeProxyVolume());
    }

    return true;
}

// fields

// properties
static void LightProbeProxyVolume_boundsGlobal(JSVCall vc)
{
        UnityEngine.LightProbeProxyVolume _this = (UnityEngine.LightProbeProxyVolume)vc.csObj;
        var result = _this.boundsGlobal;
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, result);
}
static void LightProbeProxyVolume_sizeCustom(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.LightProbeProxyVolume _this = (UnityEngine.LightProbeProxyVolume)vc.csObj;
        var result = _this.sizeCustom;
                JSApi.setVector3S((int)JSApi.SetType.Rval, result);
    }
    else
    { 
        UnityEngine.Vector3 arg0 = (UnityEngine.Vector3)JSApi.getVector3S((int)JSApi.GetType.Arg);
        UnityEngine.LightProbeProxyVolume _this = (UnityEngine.LightProbeProxyVolume)vc.csObj;
        _this.sizeCustom = arg0;
    }
}
static void LightProbeProxyVolume_originCustom(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.LightProbeProxyVolume _this = (UnityEngine.LightProbeProxyVolume)vc.csObj;
        var result = _this.originCustom;
                JSApi.setVector3S((int)JSApi.SetType.Rval, result);
    }
    else
    { 
        UnityEngine.Vector3 arg0 = (UnityEngine.Vector3)JSApi.getVector3S((int)JSApi.GetType.Arg);
        UnityEngine.LightProbeProxyVolume _this = (UnityEngine.LightProbeProxyVolume)vc.csObj;
        _this.originCustom = arg0;
    }
}
static void LightProbeProxyVolume_boundingBoxMode(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.LightProbeProxyVolume _this = (UnityEngine.LightProbeProxyVolume)vc.csObj;
        var result = _this.boundingBoxMode;
                JSApi.setEnum((int)JSApi.SetType.Rval, (int)result);
    }
    else
    { 
        UnityEngine.LightProbeProxyVolume.BoundingBoxMode arg0 = (UnityEngine.LightProbeProxyVolume.BoundingBoxMode)JSApi.getEnum((int)JSApi.GetType.Arg);
        UnityEngine.LightProbeProxyVolume _this = (UnityEngine.LightProbeProxyVolume)vc.csObj;
        _this.boundingBoxMode = arg0;
    }
}
static void LightProbeProxyVolume_resolutionMode(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.LightProbeProxyVolume _this = (UnityEngine.LightProbeProxyVolume)vc.csObj;
        var result = _this.resolutionMode;
                JSApi.setEnum((int)JSApi.SetType.Rval, (int)result);
    }
    else
    { 
        UnityEngine.LightProbeProxyVolume.ResolutionMode arg0 = (UnityEngine.LightProbeProxyVolume.ResolutionMode)JSApi.getEnum((int)JSApi.GetType.Arg);
        UnityEngine.LightProbeProxyVolume _this = (UnityEngine.LightProbeProxyVolume)vc.csObj;
        _this.resolutionMode = arg0;
    }
}
static void LightProbeProxyVolume_probePositionMode(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.LightProbeProxyVolume _this = (UnityEngine.LightProbeProxyVolume)vc.csObj;
        var result = _this.probePositionMode;
                JSApi.setEnum((int)JSApi.SetType.Rval, (int)result);
    }
    else
    { 
        UnityEngine.LightProbeProxyVolume.ProbePositionMode arg0 = (UnityEngine.LightProbeProxyVolume.ProbePositionMode)JSApi.getEnum((int)JSApi.GetType.Arg);
        UnityEngine.LightProbeProxyVolume _this = (UnityEngine.LightProbeProxyVolume)vc.csObj;
        _this.probePositionMode = arg0;
    }
}
static void LightProbeProxyVolume_refreshMode(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.LightProbeProxyVolume _this = (UnityEngine.LightProbeProxyVolume)vc.csObj;
        var result = _this.refreshMode;
                JSApi.setEnum((int)JSApi.SetType.Rval, (int)result);
    }
    else
    { 
        UnityEngine.LightProbeProxyVolume.RefreshMode arg0 = (UnityEngine.LightProbeProxyVolume.RefreshMode)JSApi.getEnum((int)JSApi.GetType.Arg);
        UnityEngine.LightProbeProxyVolume _this = (UnityEngine.LightProbeProxyVolume)vc.csObj;
        _this.refreshMode = arg0;
    }
}
static void LightProbeProxyVolume_probeDensity(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.LightProbeProxyVolume _this = (UnityEngine.LightProbeProxyVolume)vc.csObj;
        var result = _this.probeDensity;
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(result));
    }
    else
    { 
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        UnityEngine.LightProbeProxyVolume _this = (UnityEngine.LightProbeProxyVolume)vc.csObj;
        _this.probeDensity = arg0;
    }
}
static void LightProbeProxyVolume_gridResolutionX(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.LightProbeProxyVolume _this = (UnityEngine.LightProbeProxyVolume)vc.csObj;
        var result = _this.gridResolutionX;
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(result));
    }
    else
    { 
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        UnityEngine.LightProbeProxyVolume _this = (UnityEngine.LightProbeProxyVolume)vc.csObj;
        _this.gridResolutionX = arg0;
    }
}
static void LightProbeProxyVolume_gridResolutionY(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.LightProbeProxyVolume _this = (UnityEngine.LightProbeProxyVolume)vc.csObj;
        var result = _this.gridResolutionY;
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(result));
    }
    else
    { 
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        UnityEngine.LightProbeProxyVolume _this = (UnityEngine.LightProbeProxyVolume)vc.csObj;
        _this.gridResolutionY = arg0;
    }
}
static void LightProbeProxyVolume_gridResolutionZ(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.LightProbeProxyVolume _this = (UnityEngine.LightProbeProxyVolume)vc.csObj;
        var result = _this.gridResolutionZ;
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(result));
    }
    else
    { 
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        UnityEngine.LightProbeProxyVolume _this = (UnityEngine.LightProbeProxyVolume)vc.csObj;
        _this.gridResolutionZ = arg0;
    }
}
static void LightProbeProxyVolume_isFeatureSupported(JSVCall vc)
{
        var result = UnityEngine.LightProbeProxyVolume.isFeatureSupported;
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(result));
}

// methods

static bool LightProbeProxyVolume_Update(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 0) 
    {
        ((UnityEngine.LightProbeProxyVolume)vc.csObj).Update();
    }

    return true;
}


//register

public static void __Register()
{
    JSMgr.CallbackInfo ci = new JSMgr.CallbackInfo();
    ci.type = typeof(UnityEngine.LightProbeProxyVolume);
    ci.fields = new JSMgr.CSCallbackField[]
    {

    };
    ci.properties = new JSMgr.CSCallbackProperty[]
    {
        LightProbeProxyVolume_boundsGlobal,
        LightProbeProxyVolume_sizeCustom,
        LightProbeProxyVolume_originCustom,
        LightProbeProxyVolume_boundingBoxMode,
        LightProbeProxyVolume_resolutionMode,
        LightProbeProxyVolume_probePositionMode,
        LightProbeProxyVolume_refreshMode,
        LightProbeProxyVolume_probeDensity,
        LightProbeProxyVolume_gridResolutionX,
        LightProbeProxyVolume_gridResolutionY,
        LightProbeProxyVolume_gridResolutionZ,
        LightProbeProxyVolume_isFeatureSupported,

    };
    ci.constructors = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(LightProbeProxyVolume_LightProbeProxyVolume1, ".ctor"),

    };
    ci.methods = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(LightProbeProxyVolume_Update, "Update"),

    };
    JSMgr.allCallbackInfo.Add(ci);
}


}
