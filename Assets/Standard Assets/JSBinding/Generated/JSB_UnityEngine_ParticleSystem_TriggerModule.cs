
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by CSGenerator.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;

using jsval = JSApi.jsval;

public class JSB_UnityEngine_ParticleSystem_TriggerModule
{

////////////////////// TriggerModule ///////////////////////////////////////
// constructors

// fields

// properties
static void TriggerModule_enabled(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.ParticleSystem.TriggerModule _this = (UnityEngine.ParticleSystem.TriggerModule)vc.csObj;
        var result = _this.enabled;
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(result));
    }
    else
    { 
        System.Boolean arg0 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        UnityEngine.ParticleSystem.TriggerModule _this = (UnityEngine.ParticleSystem.TriggerModule)vc.csObj;
        _this.enabled = arg0;
        JSMgr.changeJSObj(vc.jsObjID, _this);
    }
}
static void TriggerModule_inside(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.ParticleSystem.TriggerModule _this = (UnityEngine.ParticleSystem.TriggerModule)vc.csObj;
        var result = _this.inside;
                JSApi.setEnum((int)JSApi.SetType.Rval, (int)result);
    }
    else
    { 
        UnityEngine.ParticleSystemOverlapAction arg0 = (UnityEngine.ParticleSystemOverlapAction)JSApi.getEnum((int)JSApi.GetType.Arg);
        UnityEngine.ParticleSystem.TriggerModule _this = (UnityEngine.ParticleSystem.TriggerModule)vc.csObj;
        _this.inside = arg0;
        JSMgr.changeJSObj(vc.jsObjID, _this);
    }
}
static void TriggerModule_outside(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.ParticleSystem.TriggerModule _this = (UnityEngine.ParticleSystem.TriggerModule)vc.csObj;
        var result = _this.outside;
                JSApi.setEnum((int)JSApi.SetType.Rval, (int)result);
    }
    else
    { 
        UnityEngine.ParticleSystemOverlapAction arg0 = (UnityEngine.ParticleSystemOverlapAction)JSApi.getEnum((int)JSApi.GetType.Arg);
        UnityEngine.ParticleSystem.TriggerModule _this = (UnityEngine.ParticleSystem.TriggerModule)vc.csObj;
        _this.outside = arg0;
        JSMgr.changeJSObj(vc.jsObjID, _this);
    }
}
static void TriggerModule_enter(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.ParticleSystem.TriggerModule _this = (UnityEngine.ParticleSystem.TriggerModule)vc.csObj;
        var result = _this.enter;
                JSApi.setEnum((int)JSApi.SetType.Rval, (int)result);
    }
    else
    { 
        UnityEngine.ParticleSystemOverlapAction arg0 = (UnityEngine.ParticleSystemOverlapAction)JSApi.getEnum((int)JSApi.GetType.Arg);
        UnityEngine.ParticleSystem.TriggerModule _this = (UnityEngine.ParticleSystem.TriggerModule)vc.csObj;
        _this.enter = arg0;
        JSMgr.changeJSObj(vc.jsObjID, _this);
    }
}
static void TriggerModule_exit(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.ParticleSystem.TriggerModule _this = (UnityEngine.ParticleSystem.TriggerModule)vc.csObj;
        var result = _this.exit;
                JSApi.setEnum((int)JSApi.SetType.Rval, (int)result);
    }
    else
    { 
        UnityEngine.ParticleSystemOverlapAction arg0 = (UnityEngine.ParticleSystemOverlapAction)JSApi.getEnum((int)JSApi.GetType.Arg);
        UnityEngine.ParticleSystem.TriggerModule _this = (UnityEngine.ParticleSystem.TriggerModule)vc.csObj;
        _this.exit = arg0;
        JSMgr.changeJSObj(vc.jsObjID, _this);
    }
}
static void TriggerModule_radiusScale(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.ParticleSystem.TriggerModule _this = (UnityEngine.ParticleSystem.TriggerModule)vc.csObj;
        var result = _this.radiusScale;
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(result));
    }
    else
    { 
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        UnityEngine.ParticleSystem.TriggerModule _this = (UnityEngine.ParticleSystem.TriggerModule)vc.csObj;
        _this.radiusScale = arg0;
        JSMgr.changeJSObj(vc.jsObjID, _this);
    }
}
static void TriggerModule_maxColliderCount(JSVCall vc)
{
        UnityEngine.ParticleSystem.TriggerModule _this = (UnityEngine.ParticleSystem.TriggerModule)vc.csObj;
        var result = _this.maxColliderCount;
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(result));
}

// methods

static bool TriggerModule_GetCollider__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
UnityEngine.ParticleSystem.TriggerModule argThis = (UnityEngine.ParticleSystem.TriggerModule)vc.csObj;                JSMgr.datax.setObject((int)JSApi.SetType.Rval, argThis.GetCollider(arg0));
        JSMgr.changeJSObj(vc.jsObjID, argThis);
    }

    return true;
}

static bool TriggerModule_SetCollider__Int32__Component(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        UnityEngine.Component arg1 = (UnityEngine.Component)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
UnityEngine.ParticleSystem.TriggerModule argThis = (UnityEngine.ParticleSystem.TriggerModule)vc.csObj;        argThis.SetCollider(arg0, arg1);
        JSMgr.changeJSObj(vc.jsObjID, argThis);
    }

    return true;
}


//register

public static void __Register()
{
    JSMgr.CallbackInfo ci = new JSMgr.CallbackInfo();
    ci.type = typeof(UnityEngine.ParticleSystem.TriggerModule);
    ci.fields = new JSMgr.CSCallbackField[]
    {

    };
    ci.properties = new JSMgr.CSCallbackProperty[]
    {
        TriggerModule_enabled,
        TriggerModule_inside,
        TriggerModule_outside,
        TriggerModule_enter,
        TriggerModule_exit,
        TriggerModule_radiusScale,
        TriggerModule_maxColliderCount,

    };
    ci.constructors = new JSMgr.MethodCallBackInfo[]
    {

    };
    ci.methods = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(TriggerModule_GetCollider__Int32, "GetCollider"),
        new JSMgr.MethodCallBackInfo(TriggerModule_SetCollider__Int32__Component, "SetCollider"),

    };
    JSMgr.allCallbackInfo.Add(ci);
}


}
