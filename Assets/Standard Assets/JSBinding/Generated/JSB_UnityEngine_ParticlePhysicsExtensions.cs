
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by CSGenerator.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;

using jsval = JSApi.jsval;

public class JSB_UnityEngine_ParticlePhysicsExtensions
{

////////////////////// ParticlePhysicsExtensions ///////////////////////////////////////
// constructors

// fields

// properties

// methods

static bool ParticlePhysicsExtensions_GetCollisionEvents__ParticleSystem__GameObject__ListT1_ParticleCollisionEvent(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 3) 
    {
        UnityEngine.ParticleSystem arg0 = (UnityEngine.ParticleSystem)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        UnityEngine.GameObject arg1 = (UnityEngine.GameObject)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        List<UnityEngine.ParticleCollisionEvent> arg2 = (List<UnityEngine.ParticleCollisionEvent>)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(UnityEngine.ParticlePhysicsExtensions.GetCollisionEvents(arg0, arg1, arg2)));
    }

    return true;
}

static bool ParticlePhysicsExtensions_GetSafeCollisionEventSize__ParticleSystem(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        UnityEngine.ParticleSystem arg0 = (UnityEngine.ParticleSystem)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(UnityEngine.ParticlePhysicsExtensions.GetSafeCollisionEventSize(arg0)));
    }

    return true;
}

static bool ParticlePhysicsExtensions_GetSafeTriggerParticlesSize__ParticleSystem__ParticleSystemTriggerEventType(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        UnityEngine.ParticleSystem arg0 = (UnityEngine.ParticleSystem)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        UnityEngine.ParticleSystemTriggerEventType arg1 = (UnityEngine.ParticleSystemTriggerEventType)JSApi.getEnum((int)JSApi.GetType.Arg);
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(UnityEngine.ParticlePhysicsExtensions.GetSafeTriggerParticlesSize(arg0, arg1)));
    }

    return true;
}

static bool ParticlePhysicsExtensions_GetTriggerParticles__ParticleSystem__ParticleSystemTriggerEventType__ListT1_Particle(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 3) 
    {
        UnityEngine.ParticleSystem arg0 = (UnityEngine.ParticleSystem)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        UnityEngine.ParticleSystemTriggerEventType arg1 = (UnityEngine.ParticleSystemTriggerEventType)JSApi.getEnum((int)JSApi.GetType.Arg);
        List<UnityEngine.ParticleSystem.Particle> arg2 = (List<UnityEngine.ParticleSystem.Particle>)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(UnityEngine.ParticlePhysicsExtensions.GetTriggerParticles(arg0, arg1, arg2)));
    }

    return true;
}

static bool ParticlePhysicsExtensions_SetTriggerParticles__ParticleSystem__ParticleSystemTriggerEventType__ListT1_Particle__Int32__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 5) 
    {
        UnityEngine.ParticleSystem arg0 = (UnityEngine.ParticleSystem)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        UnityEngine.ParticleSystemTriggerEventType arg1 = (UnityEngine.ParticleSystemTriggerEventType)JSApi.getEnum((int)JSApi.GetType.Arg);
        List<UnityEngine.ParticleSystem.Particle> arg2 = (List<UnityEngine.ParticleSystem.Particle>)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        System.Int32 arg3 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg4 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        UnityEngine.ParticlePhysicsExtensions.SetTriggerParticles(arg0, arg1, arg2, arg3, arg4);
    }

    return true;
}

static bool ParticlePhysicsExtensions_SetTriggerParticles__ParticleSystem__ParticleSystemTriggerEventType__ListT1_Particle(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 3) 
    {
        UnityEngine.ParticleSystem arg0 = (UnityEngine.ParticleSystem)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        UnityEngine.ParticleSystemTriggerEventType arg1 = (UnityEngine.ParticleSystemTriggerEventType)JSApi.getEnum((int)JSApi.GetType.Arg);
        List<UnityEngine.ParticleSystem.Particle> arg2 = (List<UnityEngine.ParticleSystem.Particle>)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        UnityEngine.ParticlePhysicsExtensions.SetTriggerParticles(arg0, arg1, arg2);
    }

    return true;
}


//register

public static void __Register()
{
    JSMgr.CallbackInfo ci = new JSMgr.CallbackInfo();
    ci.type = typeof(UnityEngine.ParticlePhysicsExtensions);
    ci.fields = new JSMgr.CSCallbackField[]
    {

    };
    ci.properties = new JSMgr.CSCallbackProperty[]
    {

    };
    ci.constructors = new JSMgr.MethodCallBackInfo[]
    {

    };
    ci.methods = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(ParticlePhysicsExtensions_GetCollisionEvents__ParticleSystem__GameObject__ListT1_ParticleCollisionEvent, "GetCollisionEvents"),
        new JSMgr.MethodCallBackInfo(ParticlePhysicsExtensions_GetSafeCollisionEventSize__ParticleSystem, "GetSafeCollisionEventSize"),
        new JSMgr.MethodCallBackInfo(ParticlePhysicsExtensions_GetSafeTriggerParticlesSize__ParticleSystem__ParticleSystemTriggerEventType, "GetSafeTriggerParticlesSize"),
        new JSMgr.MethodCallBackInfo(ParticlePhysicsExtensions_GetTriggerParticles__ParticleSystem__ParticleSystemTriggerEventType__ListT1_Particle, "GetTriggerParticles"),
        new JSMgr.MethodCallBackInfo(ParticlePhysicsExtensions_SetTriggerParticles__ParticleSystem__ParticleSystemTriggerEventType__ListT1_Particle__Int32__Int32, "SetTriggerParticles"),
        new JSMgr.MethodCallBackInfo(ParticlePhysicsExtensions_SetTriggerParticles__ParticleSystem__ParticleSystemTriggerEventType__ListT1_Particle, "SetTriggerParticles"),

    };
    JSMgr.allCallbackInfo.Add(ci);
}


}
